import{b as i,o as l,w as s,g as t,v as c,x as p,T as o}from"./modules/vue-BIi8di9e.js";import{_ as m}from"./kott-BUUi4ZrB.js";import{I as d}from"./side-title-B7I9zacO.js";import{u,f}from"./slidev/context-C_FI_DF0.js";import"./index-D-JZZkP8.js";import"./modules/shiki-B2bJ1oOB.js";const _="/orientation/assets/DI-B4DA-4h4.jpg",w={__name:"slides.md__slidev_21",setup(g){const{$clicksContext:r,$frontmatter:n}=u();return r.setup(),(h,e)=>(l(),i(d,c(p(o(f)(o(n),20))),{title:s(a=>[...e[0]||(e[0]=[t("h1",null,"Dependency Injection",-1)])]),content:s(a=>[...e[1]||(e[1]=[t("img",{src:_},null,-1),t("br",null,null,-1),t("div",{class:"leading-10"},' Design pattern where a class receives its dependencies from an external source rather than creating them itself.Â Instead of a class being responsible for creating the objects it needs to function, those objects are "injected" into it, typically through its constructor or setter methods. ',-1),t("div",{class:"abs-tr m-2 w-50"},[t("img",{src:m})],-1)])]),_:1},16))}};export{w as default};
